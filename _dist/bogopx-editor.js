!function(){var t={123:function(){}},e={};function o(n){var s=e[n];if(void 0!==s)return s.exports;var a=e[n]={exports:{}};return t[n](a,a.exports,o),a.exports}!function(){"use strict";class t{constructor(t,e){this.url=t||"",this.headers={"Content-Type":"application/json",...e}}async get(t){try{const e=await fetch(this.url+t,{method:"GET",headers:this.headers});return e.ok?e.json():Promise.reject(await e.json())}catch(t){return console.log(t),Promise.reject(t)}}async getFromSession(t){const e=sessionStorage.getItem(t);if(e&&"undefined"!==e)return JSON.parse(e);try{const e=await this.get(t);return sessionStorage.setItem(t,JSON.stringify(e)),e}catch(t){return Promise.reject(t)}}async getFromLocal(t){const e=localStorage.getItem(t);if(e&&"undefined"!==e)return JSON.parse(e);try{const e=await this.get(t);return localStorage.setItem(t,JSON.stringify(e)),e}catch(t){return Promise.reject(t)}}async post(t,e){let o=null,{headers:n}=this;e instanceof Element?(o=new FormData(e),n={}):o=JSON.stringify(e);try{const e=await fetch(this.url+t,{method:"POST",body:o,headers:n});return e.ok?e.json():Promise.reject(await e.json())}catch(t){return console.log(t),Promise.reject(t)}}async delete(t){try{return await fetch(this.url+t,{method:"DELETE"})}catch(t){return console.log(t),Promise.reject(t)}}}const e={},{nonce:n,root:s}=window.bogoApiSettings;n&&(e["X-WP-Nonce"]=n),new t;const a=new t(s,e);o(123);const{wp:r}=window;r.domReady((function(){const{currentOption:t,options:e,optionsCreate:o}=window.bogoLanguageDropdown,n=`<div class="bogo-dropdown__button" tabindex="0">\n    <i class="flag flag-${t.locale}"></i>\n    <span>${t.label}</span>\n  </div>`;let s="";e.length>=1&&(s+="<li><h6>AVAILABLE LANGUAGES</h6></li>",e.forEach((t=>{const e="draft"===t.status?"<b>DRAFT</b>":"";s+=`<li>\n        <a href="${t.url}">\n          <i class="flag flag-${t.locale}"></i>\n          <span>\n            ${t.label}\n            ${e}\n          </span>\n        </a>\n      </li>`})));let r="";o.length>=1&&(r+="<li><h6>ADD TRANSLATION</h6></li>",o.forEach((t=>{r+=`<li>\n        <a data-route="${t.url}" data-locale="${t.locale}">\n          <i class="flag flag-${t.locale}"></i>\n          <span>\n            ${t.label}\n            <b>DRAFT</b>\n          </span>\n        </a>\n      </li>`})));const i=`<div class="bogo-dropdown">\n    ${n}\n    <div class="bogo-options">\n      <ul class="bogo-options__available">\n        ${s}\n      </ul>\n      <ul class="bogo-options__new">\n        ${r}\n      </ul>\n  </div>`;async function c(t){const e=t.currentTarget,o=e.closest("li"),{route:n,locale:s}=e.dataset;o.classList.add("is-loading");try{const t=(await a.post(n))[s];e.setAttribute("href",t.edit_link),o.classList.remove("is-loading");const r=o.closest(".bogo-options").querySelector(".bogo-options__available");r&&(r.insertAdjacentHTML("beforeend",o.outerHTML),o.remove()),window.open(t.edit_link,"_blank")}catch(t){console.log(t)}o.classList.remove("is-loading")}setTimeout((function(){const t=document.querySelector(".edit-post-header__toolbar");t&&t.insertAdjacentHTML("beforeend",i),t.querySelectorAll(".bogo-options__new a").forEach((t=>{t.addEventListener("click",c)}))}),500)}))}()}();